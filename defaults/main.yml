---
# defaults file for iptv_analyzer
show_debug: false     # Show debug output
iptv_analyzer_collector_log_email: ''

iptv_analyzer_git_repo: 'https://github.com/bsmeding/IPTV-Analyzer'     # Repo of IPTV analyzer to install and build. Also used on database server to import schema
iptv_analyzer_git_repo_destination: '/opt/iptv_analyzer'
iptv_analyzer_git_repo_update: false
iptv_analyzer_git_repo_force: false

# Please install Grafana on forehand example: ansible-galaxy install cloudalchemy.grafana
# grafana_server: ''    # Grafana server
# grafana_server_install_dashboard: true   # Install IPTV dashboard on grafana server
# grafana_server_dashboard_path: ''

iptv_analyzer_snmptraphost: 127.0.0.1   # used in /etc/iptv-analyzer/collector.conf
iptv_analyzer_snmpcommunity: public     # used in /etc/iptv-analyzer/collector.conf

# System user for frontend and/or collector
iptv_analyzer_system_user:
  name: 'tvprobe'
  password: '$6$iptv_analyzer_pr$5raZ6QjNHCOw..48KU.YU1HewfAfw1S.lxWk0zpJcnGQm2WLzsT6ZZIh9aof4bE5gxGCm3DfIFFbHFZ4l.MXJ1'   # _Please create your own hashed password ansible all -i localhost, -m debug -a "msg={{ 'TVpr0b3' | password_hash('sha512', 'iptv_analyzer_probe') }}"
  uid: 800
  gid: 800
  home: '/home/tvprobe'
  comment: 'Collector deamon for IPTV analyzer'

# Database
iptv_analyzer_install_database: true    # When matches with inventory_hostname the database will be installed and this will be used in config files (of not overwritten with database IP)
iptv_analyzer_database_server: localhost  # server host to delegate_to when configure collector. Use to add database user
#iptv_analyzer_database_server_ip:  # Use IP in configfile, if set default to database_server default ipv4 address

iptv_analyzer_database_system_user:     # Database system user
  name: 'mysql'
  uid: 28
  gid: 28
  shell: '/sbin/nologin'
  home: '/var/lib/mysql'
  comment: 'MySQL Server'
iptv_analyzer_database_root_password: ''    # PLEASE CHANGE!! Root Password for MySQL
iptv_analyzer_database_install_frontend: false  # When true, node and a node web server will be installed on the database server. default false as we use grafana as frontend
iptv_analyzer_database_frontend_port: 80
iptv_analyzer_database_user: 'tvprobe'              # default user Min 6 characters!, please use seperate accounts, see iptv_analyzer_collectors.
iptv_analyzer_database_password: 'tvprobepasswd'    # default user Min 6 characters!, please use seperate accounts, see iptv_analyzer_collectors
iptv_analyzer_database_bind_address: '127.0.0.1'    # Defaults install to localhost 127.0.0.1.
iptv_analyzer_database_grafana_user: 'grafana'
iptv_analyzer_database_grafana_password: 'grafana'
iptv_analyzer_database_name: 'tvprobe'
iptv_analyzer_database_init_script: 'database-schema-latest.sql'
iptv_analyzer_database_force_init_script: false     # Force the import of init script
# -> see more variables in de vars directory of the role


#Collector
iptv_analyzer_install_collector: true
iptv_analyzer_install_collector_force_reinstall: false    # If same version already exist is is not reinstalled, except when true
# -> see more variables in de vars directory of the role
# Add host_vars for every collector:
iptv_analyzer_collector_locale: en_GB.UTF-8
iptv_analyzer_collector_timezone: Europe/Amsterdam
iptv_analyzer_collector_ntp_server: ''
iptv_analyzer_collector_log4perl: false     # install log4perl config
# IPTV Collector configuration /etc/iptv-analyzer/collector.conf
iptv_analyzer_collector_probe_ip: "{{ ansible_facts.default_ipv4.address }}"
iptv_analyzer_collector_extra_startup_script: ''  # When defined, a custom startup script will be added, can be in files directory of role (not recommended as git will change) or in files directory on playbook dir
iptv_analyzer_collector_shortloc: 'local'         # Do not change after deployment!
iptv_analyzer_collector_switch: 'testswitch1'     # Do not change after deployment!
iptv_analyzer_collector_description: ''
iptv_analyzer_collector_distance: 1
iptv_analyzer_collector_location: 'local machine'
iptv_analyzer_collector_address: 'test street 1'
iptv_analyzer_collector_switchport: 'e1/2'
iptv_analyzer_collector_switchtype: 'Genexis'
iptv_analyzer_collector_input_ip: "{{ ansible_facts.default_ipv4.address }}"
iptv_analyzer_collector_input_dev: "{{ ansible_facts.default_ipv4.interface }}"
# Physical configuration
iptv_analyzer_collector_interface: "{{ ansible_facts.default_ipv4.interface }}"     # used for rpbe: input rule_in_eth0 and input_dev and procfile
iptv_analyzer_collector_interface_ipv4: ''    # if given, thant IPv4 will be set in /etc/interfaces.d/{{ file }}.cfg, otherwise DHCP will be used
iptv_analyzer_collector_interface_dns_server: ''  # If Given this DNS IP will be used in /etc/dhcp/dhclient.conf otherwise use DNS from DHCP request
iptv_analyzer_collector_interface_prerouting: "{{ iptv_analyzer_collector_interface }}"  # Used for prerouting mangele, defaults to interface but can be set to subinterface when needed
iptv_analyzer_collector_interface_vlans: {}   # dict for subinterfaces with vlans
  # 100:
  #   name: internet    # name if sub interface
  #   ipv4_cidr: dhcp   # use IPv4 cidr as 192.168.1.10/24 or use dhcp
iptv_analyzer_collector_db_user: probe1
iptv_analyzer_collector_db_password: password1


# USe SMC Route to join multicast streams. Use package smcroute: https://github.com/troglobit/smcroute
iptv_analyzer_collector_install_smcroute: false
iptv_analyzer_collector_mysql_query: "SELECT * FROM channels WHERE monitor='1' AND channel_proto = 'udp';"
